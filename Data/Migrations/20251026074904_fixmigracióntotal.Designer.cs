// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using proyectoIngSoft.Data;

#nullable disable

namespace proyectoIngSoft.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251026074904_fixmigracióntotal")]
    partial class fixmigracióntotal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("proyectoIngSoft.Models.Accidente", b =>
                {
                    b.Property<int>("IdAccidente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAccidente"));

                    b.Property<int>("DNI")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIni")
                        .HasColumnType("date");

                    b.Property<string>("NombreComp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoDM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdAccidente");

                    b.ToTable("t_Accidente");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.CodigoSocial", b =>
                {
                    b.Property<int>("IdCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCodigo"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCodigo");

                    b.ToTable("DbSetCodigoSocial");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.Descanso", b =>
                {
                    b.Property<int>("IdDescanso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDescanso"));

                    b.Property<int?>("AccidenteId")
                        .HasColumnType("integer");

                    b.Property<int?>("EnfermedadFamId")
                        .HasColumnType("integer");

                    b.Property<int?>("EnfermedadId")
                        .HasColumnType("integer");

                    b.Property<string>("EstadoESSALUD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EstadoSubsidioA")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EstadoSubsidioJ")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("FallecimientoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaIni")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("MaternidadId")
                        .HasColumnType("integer");

                    b.Property<int?>("PaternidadId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoDescansoId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("IdDescanso");

                    b.HasIndex("AccidenteId");

                    b.HasIndex("EnfermedadFamId");

                    b.HasIndex("EnfermedadId");

                    b.HasIndex("FallecimientoId");

                    b.HasIndex("MaternidadId");

                    b.HasIndex("PaternidadId");

                    b.HasIndex("TipoDescansoId");

                    b.HasIndex("UserId");

                    b.ToTable("t_Descanso");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.DocumentoMedico", b =>
                {
                    b.Property<int>("IdDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDocumento"));

                    b.Property<byte[]>("Archivo")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("DescansoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Tamaño")
                        .HasColumnType("bigint");

                    b.HasKey("IdDocumento");

                    b.HasIndex("DescansoId");

                    b.ToTable("DocumentosMedicos");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.Enfermedad", b =>
                {
                    b.Property<int>("IdEnfermedad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEnfermedad"));

                    b.Property<string>("CentroMedico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DescEnfe")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DiasDesc")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIni")
                        .HasColumnType("date");

                    b.Property<string>("NombreMedi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubtipoSol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdEnfermedad");

                    b.ToTable("t_Enfermedad");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.EnfermedadFam", b =>
                {
                    b.Property<int>("IdEnfermedadFam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEnfermedadFam"));

                    b.Property<string>("CentroMedico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DiaSoli")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("FechaDiag")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIni")
                        .HasColumnType("date");

                    b.Property<string>("Medico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreFamiliar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroCMP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdEnfermedadFam");

                    b.ToTable("t_EnfermedadFamiliar");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.Fallecimiento", b =>
                {
                    b.Property<int>("IdFallec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFallec"));

                    b.Property<DateOnly>("FechaComun")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIni")
                        .HasColumnType("date");

                    b.Property<string>("LugarSep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreFallec")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Traslado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdFallec");

                    b.ToTable("t_Fallecimiento");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.Maternidad", b =>
                {
                    b.Property<int>("IdMater")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMater"));

                    b.Property<string>("CentroMed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIni")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaParto")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaUltM")
                        .HasColumnType("date");

                    b.Property<string>("MedicoT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PartoMult")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SemanasGest")
                        .HasColumnType("integer");

                    b.HasKey("IdMater");

                    b.ToTable("t_Maternidad");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.NotificacionSimulada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("De")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Para")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DbSetNotificacionSimulada");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("DocumentoAdjuntos")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.Paternidad", b =>
                {
                    b.Property<int>("IdPater")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPater"));

                    b.Property<string>("CentroMed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("FechaComun")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIni")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaParto")
                        .HasColumnType("date");

                    b.Property<string>("NombrePareja")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoSituacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdPater");

                    b.ToTable("t_Paternidad");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.TipoDescanso", b =>
                {
                    b.Property<int>("IdTDescanso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTDescanso"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdTDescanso");

                    b.ToTable("t_TiposDescanso");

                    b.HasData(
                        new
                        {
                            IdTDescanso = 1,
                            Nombre = "Enfermedad"
                        },
                        new
                        {
                            IdTDescanso = 2,
                            Nombre = "Maternidad"
                        },
                        new
                        {
                            IdTDescanso = 3,
                            Nombre = "Paternidad"
                        },
                        new
                        {
                            IdTDescanso = 4,
                            Nombre = "Fallecimiento Familiar"
                        },
                        new
                        {
                            IdTDescanso = 5,
                            Nombre = "Enfermedad Familiar"
                        },
                        new
                        {
                            IdTDescanso = 6,
                            Nombre = "Accidente"
                        });
                });

            modelBuilder.Entity("proyectoIngSoft.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CargoLaboral")
                        .HasColumnType("text");

                    b.Property<string>("ConfirmarPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IdCodigo")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubigeo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdCodigo");

                    b.ToTable("T_Usuarios");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.ValidarDatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Captcha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("Ubigeo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.HasKey("Id");

                    b.ToTable("ValidarDatos");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.Descanso", b =>
                {
                    b.HasOne("proyectoIngSoft.Models.Accidente", "Accidente")
                        .WithMany()
                        .HasForeignKey("AccidenteId");

                    b.HasOne("proyectoIngSoft.Models.EnfermedadFam", "EnfermedadFam")
                        .WithMany()
                        .HasForeignKey("EnfermedadFamId");

                    b.HasOne("proyectoIngSoft.Models.Enfermedad", "Enfermedad")
                        .WithMany()
                        .HasForeignKey("EnfermedadId");

                    b.HasOne("proyectoIngSoft.Models.Fallecimiento", "Fallecimiento")
                        .WithMany()
                        .HasForeignKey("FallecimientoId");

                    b.HasOne("proyectoIngSoft.Models.Maternidad", "Maternidad")
                        .WithMany()
                        .HasForeignKey("MaternidadId");

                    b.HasOne("proyectoIngSoft.Models.Paternidad", "Paternidad")
                        .WithMany()
                        .HasForeignKey("PaternidadId");

                    b.HasOne("proyectoIngSoft.Models.TipoDescanso", "TipoDescanso")
                        .WithMany("Descansos")
                        .HasForeignKey("TipoDescansoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoIngSoft.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accidente");

                    b.Navigation("Enfermedad");

                    b.Navigation("EnfermedadFam");

                    b.Navigation("Fallecimiento");

                    b.Navigation("Maternidad");

                    b.Navigation("Paternidad");

                    b.Navigation("TipoDescanso");

                    b.Navigation("User");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.DocumentoMedico", b =>
                {
                    b.HasOne("proyectoIngSoft.Models.Descanso", "Descanso")
                        .WithMany("DocumentosMedicos")
                        .HasForeignKey("DescansoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Descanso");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.User", b =>
                {
                    b.HasOne("proyectoIngSoft.Models.CodigoSocial", "CodigoSocial")
                        .WithMany()
                        .HasForeignKey("IdCodigo");

                    b.Navigation("CodigoSocial");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.Descanso", b =>
                {
                    b.Navigation("DocumentosMedicos");
                });

            modelBuilder.Entity("proyectoIngSoft.Models.TipoDescanso", b =>
                {
                    b.Navigation("Descansos");
                });
#pragma warning restore 612, 618
        }
    }
}
