@model proyectoIngSoft.Models.User


<form asp-action="Register" method="post" class="register-form">
    <h2>Registro</h2>
    <div class="tabs" aria-hidden="true">
            <a asp-controller="Auth" asp-action="Login" class="tab @(ViewData["ActiveTab"] as string == "login" ? "active" : "")">Iniciar Sesi√≥n</a>
            <a asp-controller="Auth" asp-action="Register" class="tab @(ViewData["ActiveTab"] as string == "register" ? "active" : "")">Crear Cuenta</a>
    </div>

    <div class="row">
        <div class="col">
            <label>Usuario</label>
            <input asp-for="Username" class="form-control" />
        </div>
        <div class="col">
            <label>Apellidos</label>
            <input asp-for="Apellidos" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col">
            <label>DNI</label>
            <input asp-for="Dni" class="form-control" />
        </div>
        <div class="col">
            <label>Fecha de Nacimiento</label>
            <input asp-for="FechaNacimiento" type="date" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col">
            <label>Tel√©fono</label>
            <input asp-for="Telefono" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col">
            <label>Correo Electr√≥nico</label>
            <input asp-for="Email" type="email" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col">
            <label>Contrase√±a</label>
            <input asp-for="Password" type="password" class="form-control" />
        </div>
        <div class="col">
            <label>Confirmar Contrase√±a</label>
            <input asp-for="ConfirmarPassword" type="password" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col">
            <label>Ubigeo</label>
            <input asp-for="Ubigeo" class="form-control" />
        </div>
        <div class="col">
            <label>Distrito</label>
            <input asp-for="Distrito" class="form-control" />
        </div>
        <div class="col">
            <label>Raz√≥n Social</label>
            <input asp-for="RazonSocial"
                class="form-control @(ViewData.ModelState["RazonSocial"]?.Errors.Count > 0 ? "is-invalid" : "")"
                id="razonSocialInput" />
            <span asp-validation-for="RazonSocial" class="text-danger" id="razonError"></span>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <label>Cargo Laboral</label>
            <input asp-for="CargoLaboral" class="form-control" />
        </div>
    </div>

    <div class="row">
        <button type="submit" class="btn-primary">Crear Cuenta</button>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const input = document.getElementById("razonSocialInput");
            const errorSpan = document.getElementById("razonError");

            // Validaci√≥n visual en tiempo real (cliente)
            input.addEventListener("input", () => {
                const v = input.value.trim().toUpperCase();
                if (v.length === 0) {
                    input.classList.remove("is-invalid");
                    errorSpan.textContent = "";
                    return;
                }
                if (v.length !== 6) {
                    input.classList.add("is-invalid");
                    errorSpan.textContent = "El c√≥digo debe tener exactamente 6 caracteres.";
                } else {
                    // limpia la apariencia; la validaci√≥n final la hace el servidor
                    input.classList.remove("is-invalid");
                    errorSpan.textContent = "";
                }
            });
        });
    </script>
}


@if (TempData["RegistroExitoso"] != null)
{
    <div id="modalRegistro" class="modal fadeIn">
        <div class="modal-box">
            <div class="checkmark">
                <div class="checkmark__circle"></div>
                <div class="checkmark__stem"></div>
                <div class="checkmark__kick"></div>
            </div>
            <h3>¬°Registro exitoso!</h3>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const modal = document.getElementById("modalRegistro");
            modal.style.display = "flex";

            // Redirecci√≥n autom√°tica sin aviso
            setTimeout(() => {
                window.location.href = '@Url.Action("Index", "Home")';
            }, 2000);
        });
    </script>
}
<style>
h2{ margin:0; font-size:28px; font-weight:700; color:#0f1724; }
.subtitle{ margin-top:8px; color:#6b7280; font-size:14px; }

/* Tabs convertidas en links */
/* Tabs convertidas en links */
.tabs{
  margin:26px auto 28px;
  width:420px;
  max-width:100%;
  background:#f2f2f4;
  border-radius:999px;
  padding:6px;
  display:flex;
  gap:6px;
}
.tab{
  flex:1;
  text-align:center;
  padding:10px 18px;
  border-radius:999px;
  font-weight:600;
  font-size:14px;
  cursor:pointer;
  user-select:none;
  text-decoration:none;
  color:#51545b;
  transition: all 0.2s ease-in-out; /* animaci√≥n suave */
}
.tab.active{
  background:#ffffff;
  box-shadow:0 4px 10px rgba(9,10,20,0.06);
  color:#0b1020;
}
/* üî• Hover efecto negro */
.tab:hover{
  background:#0b0b2a;
  color:#fff;
}

.register-form {
  max-width: 820px;
  margin: 0 auto;
  padding: 32px 40px;
  background: #fff;
  border-radius: 18px;
  box-shadow: 0 8px 24px rgba(0,0,0,0.08);
  display: flex;
  flex-direction: column;
  gap: 18px;
}

/* T√≠tulo */
h2 {
  text-align: center;
  font-size: 26px;
  font-weight: 700;
  color: #111827;
  margin-bottom: 12px;
}

/* Filas y columnas */
.row {
  display: flex;
  gap: 18px;
  width: 100%;
}
.col {
  flex: 1;
  display: flex;
  flex-direction: column;
}

/* Labels */
form label {
  font-weight: 600;
  font-size: 14px;
  margin-bottom: 6px;
  color: #111827;
}

/* Inputs */
form .form-control {
  width: 100%;
  padding: 12px 14px;
  border-radius: 10px;
  border: none;
  background: #f6f6f7;
  font-size: 15px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(0,0,0,0.05);
}
form .form-control::placeholder {
  color: #9ca3af;
}

/* Bot√≥n */
.btn-primary {
  width: 100%;
  padding: 14px;
  font-size: 16px;
  font-weight: 700;
  border-radius: 12px;
  border: none;
  cursor: pointer;
  background-image: linear-gradient(90deg, #070318, #0b0b2a);
  color: #fff;
  box-shadow: 0 6px 16px rgba(0,0,0,0.15);
}

/* Responsive */
@@media (max-width: 640px) {
  .row { flex-direction: column; }
}


/* Fondo semitransparente del modal */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.4);
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    /* Cuadro del modal */
    .modal-box {
        background: #fff;
        padding: 40px 60px;
        border-radius: 16px;
        text-align: center;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        animation: fadeInUp 0.4s ease-out;
    }

    .modal-box h3 {
        margin-top: 20px;
        font-size: 20px;
        color: #111827;
        font-weight: 700;
    }

    /* ‚úÖ Animaci√≥n de check */
    .checkmark {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        display: inline-block;
        position: relative;
        box-sizing: content-box;
        border: 4px solid #4CAF50;
        animation: scaleIn 0.3s ease-in-out;
    }

    .checkmark__circle {
        stroke-dasharray: 166;
        stroke-dashoffset: 166;
        stroke-width: 2;
        stroke-miterlimit: 10;
        stroke: #4CAF50;
        fill: none;
        animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
    }

    .checkmark__stem {
        position: absolute;
        width: 3px;
        height: 25px;
        background-color: #4CAF50;
        left: 26px;
        top: 38px;
        transform: rotate(45deg);
        border-radius: 2px;
        animation: drawStem 0.3s ease-out forwards;
        transform-origin: left top;
        opacity: 0;
    }

    .checkmark__kick {
        position: absolute;
        width: 3px;
        height: 10px;
        background-color: #4CAF50;
        left: 40px;
        top: 52px;
        transform: rotate(-45deg);
        border-radius: 2px;
        animation: drawKick 0.3s ease-out 0.2s forwards;
        transform-origin: left top;
        opacity: 0;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes drawStem {
        from { height: 0; opacity: 1; }
        to { height: 25px; opacity: 1; }
    }

    @@keyframes drawKick {
        from { height: 0; opacity: 1; }
        to { height: 10px; opacity: 1; }
    }

    @@keyframes scaleIn {
        from { transform: scale(0); opacity: 0; }
        to { transform: scale(1); opacity: 1; }
    }
</style>

